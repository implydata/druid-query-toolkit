import { sqlParserFactory } from '../lib/druidsql';

describe('Expression Tests', () => {
  const parser = sqlParserFactory([
    'COUNT',
    'SUM',
    'MIN',
    'MAX',
    'AVG',
    'APPROX_COUNT_DISTINCT',
    'APPROX_COUNT_DISTINCT_DS_HLL',
    'APPROX_COUNT_DISTINCT_DS_THETA',
    'APPROX_QUANTILE',
    'APPROX_QUANTILE_DS',
    'APPROX_QUANTILE_FIXED_BUCKETS',
    'BLOOM_FILTER',
    'ABS',
    'CEIL',
    'EXP',
    'FLOOR',
    'LN',
    'LOG10',
    'POWER',
    'SQRT',
    'TRUNCATE',
    'TRUNC',
    'ROUND',
    'MOD',
    'SIN',
    'COS',
    'TAN',
    'COT',
    'ASIN',
    'ACOS',
    'ATAN',
    'ATAN2',
    'DEGREES',
    'RADIANS',
    'CONCAT',
    'TEXTCAT',
    'STRING_FORMAT',
    'LENGTH',
    'CHAR_LENGTH',
    'CHARARACTER_LENGTH',
    'STRLEN',
    'LOOKUP',
    'LOWER',
    'PARSE_LONG',
    'POSITION',
    'REGEXP_EXTRACT',
    'REPLACE',
    'STRPOS',
    'SUBSTRING',
    'RIGHT',
    'LEFT',
    'SUBSTR',
    'TRIM',
    'BTRIM',
    'LTRIM',
    'RTRIM',
    'UPPER',
    'REVERSE',
    'REPEAT',
    'LPAD',
    'RPAD',
    'CURRENT_TIMESTAMP',
    'CURRENT_DATE',
    'DATE_TRUNC',
    'TIME_FLOOR',
    'TIME_SHIFT',
    'TIME_EXTRACT',
    'TIME_PARSE',
    'TIME_FORMAT',
    'MILLIS_TO_TIMESTAMP',
    'TIMESTAMP_TO_MILIS',
    'EXTRACT',
    'FLOOR',
    'CEIL',
    'TIMESTAMPADD',
    'timestamp_expr',
    'CAST',
    'NULLIF',
    'COALESCE',
    'BLOOM_FILTER_TEST',
  ]);

  it('parsers a basic expression', () => {
    expect(
      parser(`
    SELECT * FROM wikipedia
    `),
    ).toMatchSnapshot();
  });
});
