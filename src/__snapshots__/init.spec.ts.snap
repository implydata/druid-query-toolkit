// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Druid Query Tests parsers segments query 1`] = `
Object {
  "endSpacing": Array [],
  "from": Object {
    "spacing": Array [
      "
",
    ],
    "syntax": "FROM",
    "type": "from",
    "value": Object {
      "alias": null,
      "schema": "sys",
      "spacing": Array [
        " ",
      ],
      "table": "segments",
      "type": "table",
    },
  },
  "groupby": null,
  "having": null,
  "limit": Object {
    "spacing": Array [
      "
",
    ],
    "syntax": "LIMIT",
    "type": "limit",
    "value": Object {
      "spacing": Array [
        " ",
      ],
      "type": "Integer",
      "value": "50",
    },
  },
  "orderBy": Object {
    "orderByParts": Array [
      Object {
        "direction": Object {
          "direction": "DESC",
          "spacing": Array [
            " ",
          ],
          "type": "direction",
        },
        "expr": Array [
          Object {
            "spacing": Array [],
            "type": "exprPart",
            "value": Object {
              "quote": "\\"",
              "spacing": Array [],
              "type": "variable",
              "value": "start",
            },
          },
        ],
        "spacing": Array [
          " ",
        ],
        "type": "orderByPart",
      },
    ],
    "spacing": Array [
      "
",
    ],
    "syntax": "ORDER BY",
    "type": "orderBy",
  },
  "queryType": "SELECT",
  "selectParts": Array [
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "segment_id",
      },
      "spacing": Array [
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "datasource",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "start",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "end",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "size",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "version",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "partition_num",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "num_replicas",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "num_rows",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "is_published",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "is_available",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "is_realtime",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "is_overshadowed",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "payload",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
  ],
  "spacing": Array [],
  "syntax": "SELECT",
  "type": "query",
  "unionAll": null,
  "where": null,
}
`;

exports[`Druid Query Tests parsers segments query to string 1`] = `
"SELECT \\"segment_id\\", \\"datasource\\", \\"start\\", \\"end\\", \\"size\\", \\"version\\", \\"partition_num\\", \\"num_replicas\\", \\"num_rows\\", \\"is_published\\", \\"is_available\\", \\"is_realtime\\", \\"is_overshadowed\\", \\"payload\\"
FROM sys.segments
ORDER BY \\"start\\" DESC
LIMIT 50"
`;

exports[`Druid Query Tests parsers servers query 1`] = `
Object {
  "endSpacing": Array [],
  "from": Object {
    "spacing": Array [
      "
",
    ],
    "syntax": "FROM",
    "type": "from",
    "value": Object {
      "alias": null,
      "schema": "sys",
      "spacing": Array [
        " ",
      ],
      "table": "servers",
      "type": "table",
    },
  },
  "groupby": null,
  "having": null,
  "limit": null,
  "orderBy": Object {
    "orderByParts": Array [
      Object {
        "direction": Object {
          "direction": "DESC",
          "spacing": Array [
            " ",
          ],
          "type": "direction",
        },
        "expr": Array [
          Object {
            "spacing": Array [],
            "type": "exprPart",
            "value": Object {
              "quote": "\\"",
              "spacing": Array [],
              "type": "variable",
              "value": "rank",
            },
          },
        ],
        "spacing": Array [
          " ",
        ],
        "type": "orderByPart",
      },
      Object {
        "direction": Object {
          "direction": "DESC",
          "spacing": Array [
            " ",
          ],
          "type": "direction",
        },
        "expr": Array [
          Object {
            "spacing": Array [],
            "type": "exprPart",
            "value": Object {
              "quote": "\\"",
              "spacing": Array [],
              "type": "variable",
              "value": "server",
            },
          },
        ],
        "spacing": Array [
          ",",
          " ",
        ],
        "type": "orderByPart",
      },
    ],
    "spacing": Array [
      "
",
    ],
    "syntax": "ORDER BY",
    "type": "orderBy",
  },
  "queryType": "SELECT",
  "selectParts": Array [
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "server",
      },
      "spacing": Array [
        "
",
        " ",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "server_type",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "tier",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "host",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "plaintext_port",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "tls_port",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "curr_size",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "max_size",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": Object {
        "spacing": Array [
          "
",
          " ",
          " ",
          ")",
          " ",
        ],
        "syntax": "AS",
        "type": "alias",
        "value": Object {
          "quote": "\\"",
          "spacing": Array [
            " ",
          ],
          "type": "variable",
          "value": "rank",
        },
      },
      "distinct": null,
      "expr": Object {
        "caseValue": Object {
          "caseValue": Object {
            "quote": "\\"",
            "spacing": Array [],
            "type": "variable",
            "value": "server_type",
          },
          "spacing": Array [
            " ",
          ],
          "type": "caseValue",
        },
        "elseValue": Object {
          "elseValue": Object {
            "spacing": Array [
              " ",
            ],
            "type": "Integer",
            "value": "0",
          },
          "spacing": Array [
            "
",
            " ",
            " ",
            " ",
            " ",
          ],
          "syntax": "ELSE",
          "type": "elseValue",
        },
        "end": Object {
          "spacing": Array [
            "
",
            " ",
            " ",
            " ",
            " ",
          ],
          "syntax": "END",
          "type": "end",
        },
        "spacing": Array [],
        "syntax": "CASE",
        "type": "case",
        "when": Array [
          Object {
            "spacing": Array [
              "
",
              " ",
              " ",
              " ",
              " ",
            ],
            "syntax": "WHEN",
            "then": Object {
              "spacing": Array [
                " ",
              ],
              "syntax": "THEN",
              "then": Object {
                "spacing": Array [
                  " ",
                ],
                "type": "Integer",
                "value": "7",
              },
              "type": "then",
            },
            "type": "when",
            "when": Object {
              "quote": "'",
              "spacing": Array [
                " ",
              ],
              "type": "variable",
              "value": "coordinator",
            },
          },
          Object {
            "spacing": Array [
              "
",
              " ",
              " ",
              " ",
              " ",
            ],
            "syntax": "WHEN",
            "then": Object {
              "spacing": Array [
                " ",
              ],
              "syntax": "THEN",
              "then": Object {
                "spacing": Array [
                  " ",
                ],
                "type": "Integer",
                "value": "6",
              },
              "type": "then",
            },
            "type": "when",
            "when": Object {
              "quote": "'",
              "spacing": Array [
                " ",
              ],
              "type": "variable",
              "value": "overlord",
            },
          },
          Object {
            "spacing": Array [
              "
",
              " ",
              " ",
              " ",
              " ",
            ],
            "syntax": "WHEN",
            "then": Object {
              "spacing": Array [
                " ",
              ],
              "syntax": "THEN",
              "then": Object {
                "spacing": Array [
                  " ",
                ],
                "type": "Integer",
                "value": "5",
              },
              "type": "then",
            },
            "type": "when",
            "when": Object {
              "quote": "'",
              "spacing": Array [
                " ",
              ],
              "type": "variable",
              "value": "router",
            },
          },
          Object {
            "spacing": Array [
              "
",
              " ",
              " ",
              " ",
              " ",
            ],
            "syntax": "WHEN",
            "then": Object {
              "spacing": Array [
                " ",
              ],
              "syntax": "THEN",
              "then": Object {
                "spacing": Array [
                  " ",
                ],
                "type": "Integer",
                "value": "4",
              },
              "type": "then",
            },
            "type": "when",
            "when": Object {
              "quote": "'",
              "spacing": Array [
                " ",
              ],
              "type": "variable",
              "value": "broker",
            },
          },
          Object {
            "spacing": Array [
              "
",
              " ",
              " ",
              " ",
              " ",
            ],
            "syntax": "WHEN",
            "then": Object {
              "spacing": Array [
                " ",
              ],
              "syntax": "THEN",
              "then": Object {
                "spacing": Array [
                  " ",
                ],
                "type": "Integer",
                "value": "3",
              },
              "type": "then",
            },
            "type": "when",
            "when": Object {
              "quote": "'",
              "spacing": Array [
                " ",
              ],
              "type": "variable",
              "value": "historical",
            },
          },
          Object {
            "spacing": Array [
              "
",
              " ",
              " ",
              " ",
              " ",
            ],
            "syntax": "WHEN",
            "then": Object {
              "spacing": Array [
                " ",
              ],
              "syntax": "THEN",
              "then": Object {
                "spacing": Array [
                  " ",
                ],
                "type": "Integer",
                "value": "2",
              },
              "type": "then",
            },
            "type": "when",
            "when": Object {
              "quote": "'",
              "spacing": Array [
                " ",
              ],
              "type": "variable",
              "value": "middle_manager",
            },
          },
          Object {
            "spacing": Array [
              "
",
              " ",
              " ",
              " ",
              " ",
            ],
            "syntax": "WHEN",
            "then": Object {
              "spacing": Array [
                " ",
              ],
              "syntax": "THEN",
              "then": Object {
                "spacing": Array [
                  " ",
                ],
                "type": "Integer",
                "value": "1",
              },
              "type": "then",
            },
            "type": "when",
            "when": Object {
              "quote": "'",
              "spacing": Array [
                " ",
              ],
              "type": "variable",
              "value": "peon",
            },
          },
        ],
      },
      "spacing": Array [
        ",",
        "
",
        " ",
        " ",
        "(",
        "
",
        " ",
        " ",
        " ",
        " ",
      ],
      "type": "selectPart",
    },
  ],
  "spacing": Array [],
  "syntax": "SELECT",
  "type": "query",
  "unionAll": null,
  "where": null,
}
`;

exports[`Druid Query Tests parsers servers query to string 1`] = `
Object {
  "endSpacing": Array [],
  "from": Object {
    "spacing": Array [
      "
",
    ],
    "syntax": "FROM",
    "type": "from",
    "value": Object {
      "alias": null,
      "schema": "sys",
      "spacing": Array [
        " ",
      ],
      "table": "servers",
      "type": "table",
    },
  },
  "groupby": null,
  "having": null,
  "limit": null,
  "orderBy": Object {
    "orderByParts": Array [
      Object {
        "direction": Object {
          "direction": "DESC",
          "spacing": Array [
            " ",
          ],
          "type": "direction",
        },
        "expr": Array [
          Object {
            "spacing": Array [],
            "type": "exprPart",
            "value": Object {
              "quote": "\\"",
              "spacing": Array [],
              "type": "variable",
              "value": "rank",
            },
          },
        ],
        "spacing": Array [
          " ",
        ],
        "type": "orderByPart",
      },
      Object {
        "direction": Object {
          "direction": "DESC",
          "spacing": Array [
            " ",
          ],
          "type": "direction",
        },
        "expr": Array [
          Object {
            "spacing": Array [],
            "type": "exprPart",
            "value": Object {
              "quote": "\\"",
              "spacing": Array [],
              "type": "variable",
              "value": "server",
            },
          },
        ],
        "spacing": Array [
          ",",
          " ",
        ],
        "type": "orderByPart",
      },
    ],
    "spacing": Array [
      "
",
    ],
    "syntax": "ORDER BY",
    "type": "orderBy",
  },
  "queryType": "SELECT",
  "selectParts": Array [
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "server",
      },
      "spacing": Array [
        "
",
        " ",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "server_type",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "tier",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "host",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "plaintext_port",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "tls_port",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "curr_size",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "max_size",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": Object {
        "spacing": Array [
          "
",
          " ",
          " ",
          ")",
          " ",
        ],
        "syntax": "AS",
        "type": "alias",
        "value": Object {
          "quote": "\\"",
          "spacing": Array [
            " ",
          ],
          "type": "variable",
          "value": "rank",
        },
      },
      "distinct": null,
      "expr": Object {
        "caseValue": Object {
          "caseValue": Object {
            "quote": "\\"",
            "spacing": Array [],
            "type": "variable",
            "value": "server_type",
          },
          "spacing": Array [
            " ",
          ],
          "type": "caseValue",
        },
        "elseValue": Object {
          "elseValue": Object {
            "spacing": Array [
              " ",
            ],
            "type": "Integer",
            "value": "0",
          },
          "spacing": Array [
            "
",
            " ",
            " ",
            " ",
            " ",
          ],
          "syntax": "ELSE",
          "type": "elseValue",
        },
        "end": Object {
          "spacing": Array [
            "
",
            " ",
            " ",
            " ",
            " ",
          ],
          "syntax": "END",
          "type": "end",
        },
        "spacing": Array [],
        "syntax": "CASE",
        "type": "case",
        "when": Array [
          Object {
            "spacing": Array [
              "
",
              " ",
              " ",
              " ",
              " ",
            ],
            "syntax": "WHEN",
            "then": Object {
              "spacing": Array [
                " ",
              ],
              "syntax": "THEN",
              "then": Object {
                "spacing": Array [
                  " ",
                ],
                "type": "Integer",
                "value": "7",
              },
              "type": "then",
            },
            "type": "when",
            "when": Object {
              "quote": "'",
              "spacing": Array [
                " ",
              ],
              "type": "variable",
              "value": "coordinator",
            },
          },
          Object {
            "spacing": Array [
              "
",
              " ",
              " ",
              " ",
              " ",
            ],
            "syntax": "WHEN",
            "then": Object {
              "spacing": Array [
                " ",
              ],
              "syntax": "THEN",
              "then": Object {
                "spacing": Array [
                  " ",
                ],
                "type": "Integer",
                "value": "6",
              },
              "type": "then",
            },
            "type": "when",
            "when": Object {
              "quote": "'",
              "spacing": Array [
                " ",
              ],
              "type": "variable",
              "value": "overlord",
            },
          },
          Object {
            "spacing": Array [
              "
",
              " ",
              " ",
              " ",
              " ",
            ],
            "syntax": "WHEN",
            "then": Object {
              "spacing": Array [
                " ",
              ],
              "syntax": "THEN",
              "then": Object {
                "spacing": Array [
                  " ",
                ],
                "type": "Integer",
                "value": "5",
              },
              "type": "then",
            },
            "type": "when",
            "when": Object {
              "quote": "'",
              "spacing": Array [
                " ",
              ],
              "type": "variable",
              "value": "router",
            },
          },
          Object {
            "spacing": Array [
              "
",
              " ",
              " ",
              " ",
              " ",
            ],
            "syntax": "WHEN",
            "then": Object {
              "spacing": Array [
                " ",
              ],
              "syntax": "THEN",
              "then": Object {
                "spacing": Array [
                  " ",
                ],
                "type": "Integer",
                "value": "4",
              },
              "type": "then",
            },
            "type": "when",
            "when": Object {
              "quote": "'",
              "spacing": Array [
                " ",
              ],
              "type": "variable",
              "value": "broker",
            },
          },
          Object {
            "spacing": Array [
              "
",
              " ",
              " ",
              " ",
              " ",
            ],
            "syntax": "WHEN",
            "then": Object {
              "spacing": Array [
                " ",
              ],
              "syntax": "THEN",
              "then": Object {
                "spacing": Array [
                  " ",
                ],
                "type": "Integer",
                "value": "3",
              },
              "type": "then",
            },
            "type": "when",
            "when": Object {
              "quote": "'",
              "spacing": Array [
                " ",
              ],
              "type": "variable",
              "value": "historical",
            },
          },
          Object {
            "spacing": Array [
              "
",
              " ",
              " ",
              " ",
              " ",
            ],
            "syntax": "WHEN",
            "then": Object {
              "spacing": Array [
                " ",
              ],
              "syntax": "THEN",
              "then": Object {
                "spacing": Array [
                  " ",
                ],
                "type": "Integer",
                "value": "2",
              },
              "type": "then",
            },
            "type": "when",
            "when": Object {
              "quote": "'",
              "spacing": Array [
                " ",
              ],
              "type": "variable",
              "value": "middle_manager",
            },
          },
          Object {
            "spacing": Array [
              "
",
              " ",
              " ",
              " ",
              " ",
            ],
            "syntax": "WHEN",
            "then": Object {
              "spacing": Array [
                " ",
              ],
              "syntax": "THEN",
              "then": Object {
                "spacing": Array [
                  " ",
                ],
                "type": "Integer",
                "value": "1",
              },
              "type": "then",
            },
            "type": "when",
            "when": Object {
              "quote": "'",
              "spacing": Array [
                " ",
              ],
              "type": "variable",
              "value": "peon",
            },
          },
        ],
      },
      "spacing": Array [
        ",",
        "
",
        " ",
        " ",
        "(",
        "
",
        " ",
        " ",
        " ",
        " ",
      ],
      "type": "selectPart",
    },
  ],
  "spacing": Array [],
  "syntax": "SELECT",
  "type": "query",
  "unionAll": null,
  "where": null,
}
`;

exports[`Druid Query Tests parsers task query 1`] = `
Object {
  "endSpacing": Array [],
  "from": Object {
    "spacing": Array [
      "
",
    ],
    "syntax": "FROM",
    "type": "from",
    "value": Object {
      "alias": null,
      "schema": "sys",
      "spacing": Array [
        " ",
      ],
      "table": "tasks",
      "type": "table",
    },
  },
  "groupby": null,
  "having": null,
  "limit": null,
  "orderBy": Object {
    "orderByParts": Array [
      Object {
        "direction": Object {
          "direction": "DESC",
          "spacing": Array [
            " ",
          ],
          "type": "direction",
        },
        "expr": Array [
          Object {
            "spacing": Array [],
            "type": "exprPart",
            "value": Object {
              "quote": "\\"",
              "spacing": Array [],
              "type": "variable",
              "value": "rank",
            },
          },
        ],
        "spacing": Array [
          " ",
        ],
        "type": "orderByPart",
      },
      Object {
        "direction": Object {
          "direction": "DESC",
          "spacing": Array [
            " ",
          ],
          "type": "direction",
        },
        "expr": Array [
          Object {
            "spacing": Array [],
            "type": "exprPart",
            "value": Object {
              "quote": "\\"",
              "spacing": Array [],
              "type": "variable",
              "value": "created_time",
            },
          },
        ],
        "spacing": Array [
          ",",
          " ",
        ],
        "type": "orderByPart",
      },
    ],
    "spacing": Array [
      "
",
    ],
    "syntax": "ORDER BY",
    "type": "orderBy",
  },
  "queryType": "SELECT",
  "selectParts": Array [
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "task_id",
      },
      "spacing": Array [
        "
",
        " ",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "type",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "datasource",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "created_time",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "location",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "duration",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "quote": "\\"",
        "spacing": Array [],
        "type": "variable",
        "value": "error_msg",
      },
      "spacing": Array [
        ",",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": Object {
        "spacing": Array [
          " ",
        ],
        "syntax": "AS",
        "type": "alias",
        "value": Object {
          "quote": "\\"",
          "spacing": Array [
            " ",
          ],
          "type": "variable",
          "value": "status",
        },
      },
      "distinct": null,
      "expr": Object {
        "caseValue": null,
        "elseValue": Object {
          "elseValue": Object {
            "quote": "\\"",
            "spacing": Array [
              " ",
            ],
            "type": "variable",
            "value": "status",
          },
          "spacing": Array [
            " ",
          ],
          "syntax": "ELSE",
          "type": "elseValue",
        },
        "end": Object {
          "spacing": Array [
            " ",
          ],
          "syntax": "END",
          "type": "end",
        },
        "spacing": Array [],
        "syntax": "CASE",
        "type": "case",
        "when": Array [
          Object {
            "spacing": Array [
              " ",
            ],
            "syntax": "WHEN",
            "then": Object {
              "spacing": Array [
                " ",
              ],
              "syntax": "THEN",
              "then": Object {
                "quote": "\\"",
                "spacing": Array [
                  " ",
                ],
                "type": "variable",
                "value": "runner_status",
              },
              "type": "then",
            },
            "type": "when",
            "when": Object {
              "lhs": Object {
                "quote": "\\"",
                "spacing": Array [],
                "type": "variable",
                "value": "status",
              },
              "operator": Object {
                "operator": "=",
                "spacing": Array [
                  " ",
                ],
                "type": "operator",
              },
              "rhs": Object {
                "quote": "'",
                "spacing": Array [
                  " ",
                ],
                "type": "variable",
                "value": "RUNNING",
              },
              "spacing": Array [
                " ",
              ],
              "type": "expression",
            },
          },
        ],
      },
      "spacing": Array [
        ",",
        "
",
        " ",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": Object {
        "spacing": Array [
          "
",
          " ",
          " ",
          ")",
          " ",
        ],
        "syntax": "AS",
        "type": "alias",
        "value": Object {
          "quote": "\\"",
          "spacing": Array [
            " ",
          ],
          "type": "variable",
          "value": "rank",
        },
      },
      "distinct": null,
      "expr": Object {
        "caseValue": null,
        "elseValue": Object {
          "elseValue": Object {
            "spacing": Array [
              " ",
            ],
            "type": "Integer",
            "value": "1",
          },
          "spacing": Array [
            ")",
            "
",
            " ",
            " ",
            " ",
            " ",
          ],
          "syntax": "ELSE",
          "type": "elseValue",
        },
        "end": Object {
          "spacing": Array [
            "
",
            " ",
            " ",
            " ",
            " ",
          ],
          "syntax": "END",
          "type": "end",
        },
        "spacing": Array [],
        "syntax": "CASE",
        "type": "case",
        "when": Array [
          Object {
            "spacing": Array [
              " ",
            ],
            "syntax": "WHEN",
            "then": Object {
              "spacing": Array [
                " ",
              ],
              "syntax": "THEN",
              "then": Object {
                "caseValue": Object {
                  "caseValue": Object {
                    "quote": "\\"",
                    "spacing": Array [],
                    "type": "variable",
                    "value": "runner_status",
                  },
                  "spacing": Array [
                    " ",
                  ],
                  "type": "caseValue",
                },
                "elseValue": Object {
                  "elseValue": Object {
                    "spacing": Array [
                      " ",
                    ],
                    "type": "Integer",
                    "value": "2",
                  },
                  "spacing": Array [
                    " ",
                  ],
                  "syntax": "ELSE",
                  "type": "elseValue",
                },
                "end": Object {
                  "spacing": Array [
                    " ",
                  ],
                  "syntax": "END",
                  "type": "end",
                },
                "spacing": Array [
                  "
",
                  " ",
                  " ",
                  " ",
                  " ",
                  " ",
                  "(",
                ],
                "syntax": "CASE",
                "type": "case",
                "when": Array [
                  Object {
                    "spacing": Array [
                      " ",
                    ],
                    "syntax": "WHEN",
                    "then": Object {
                      "spacing": Array [
                        " ",
                      ],
                      "syntax": "THEN",
                      "then": Object {
                        "spacing": Array [
                          " ",
                        ],
                        "type": "Integer",
                        "value": "4",
                      },
                      "type": "then",
                    },
                    "type": "when",
                    "when": Object {
                      "quote": "'",
                      "spacing": Array [
                        " ",
                      ],
                      "type": "variable",
                      "value": "RUNNING",
                    },
                  },
                  Object {
                    "spacing": Array [
                      " ",
                    ],
                    "syntax": "WHEN",
                    "then": Object {
                      "spacing": Array [
                        " ",
                      ],
                      "syntax": "THEN",
                      "then": Object {
                        "spacing": Array [
                          " ",
                        ],
                        "type": "Integer",
                        "value": "3",
                      },
                      "type": "then",
                    },
                    "type": "when",
                    "when": Object {
                      "quote": "'",
                      "spacing": Array [
                        " ",
                      ],
                      "type": "variable",
                      "value": "PENDING",
                    },
                  },
                ],
              },
              "type": "then",
            },
            "type": "when",
            "when": Object {
              "lhs": Object {
                "quote": "\\"",
                "spacing": Array [],
                "type": "variable",
                "value": "status",
              },
              "operator": Object {
                "operator": "=",
                "spacing": Array [
                  " ",
                ],
                "type": "operator",
              },
              "rhs": Object {
                "quote": "'",
                "spacing": Array [
                  " ",
                ],
                "type": "variable",
                "value": "RUNNING",
              },
              "spacing": Array [
                " ",
              ],
              "type": "expression",
            },
          },
        ],
      },
      "spacing": Array [
        ",",
        "
",
        " ",
        " ",
        "(",
        "
",
        " ",
        " ",
        " ",
        " ",
      ],
      "type": "selectPart",
    },
  ],
  "spacing": Array [],
  "syntax": "SELECT",
  "type": "query",
  "unionAll": null,
  "where": null,
}
`;

exports[`Druid Query Tests parsers task query to string 1`] = `
"SELECT
  \\"task_id\\", \\"type\\", \\"datasource\\", \\"created_time\\", \\"location\\", \\"duration\\", \\"error_msg\\",
  CASE WHEN \\"status\\" = 'RUNNING' THEN \\"runner_status\\" ELSE \\"status\\" END AS \\"status\\",
  (
    CASE WHEN \\"status\\" = 'RUNNING' THEN
     (CASE \\"runner_status\\" WHEN 'RUNNING' THEN 4 WHEN 'PENDING' THEN 3 ELSE 2 END)
    ELSE 1
    END
  ) AS \\"rank\\"
FROM sys.tasks
ORDER BY \\"rank\\" DESC, \\"created_time\\" DESC"
`;

exports[`Druid Query Tests parsers the defaul data sources query 1`] = `
Object {
  "endSpacing": Array [],
  "from": Object {
    "spacing": Array [
      "
",
    ],
    "syntax": "FROM",
    "type": "from",
    "value": Object {
      "alias": null,
      "schema": "sys",
      "spacing": Array [
        " ",
      ],
      "table": "segments",
      "type": "table",
    },
  },
  "groupby": Object {
    "groupByParts": Array [
      Object {
        "spacing": Array [
          " ",
        ],
        "type": "Integer",
        "value": "1",
      },
    ],
    "spacing": Array [
      "
",
    ],
    "syntax": "GROUP BY",
    "type": "groupBy",
  },
  "having": null,
  "limit": null,
  "orderBy": null,
  "queryType": "SELECT",
  "selectParts": Array [
    Object {
      "alias": null,
      "distinct": null,
      "expr": Object {
        "spacing": Array [],
        "type": "Constant",
        "value": "datasource",
      },
      "spacing": Array [
        "
",
        " ",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": Object {
        "spacing": Array [
          " ",
        ],
        "syntax": "AS",
        "type": "alias",
        "value": Object {
          "spacing": Array [
            " ",
          ],
          "type": "Constant",
          "value": "num_segments",
        },
      },
      "distinct": null,
      "expr": Object {
        "arguments": Array [
          Object {
            "argumentValue": Object {
              "argument": Object {
                "type": "star",
              },
              "spacing": Array [],
              "type": "argumentValue",
            },
            "distinct": null,
            "spacing": Array [],
            "type": "argument",
          },
        ],
        "functionCall": "COUNT",
        "spacing": Array [],
        "type": "function",
      },
      "spacing": Array [
        ",",
        "
",
        " ",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": Object {
        "spacing": Array [
          " ",
        ],
        "syntax": "AS",
        "type": "alias",
        "value": Object {
          "spacing": Array [
            " ",
          ],
          "type": "Constant",
          "value": "num_available_segments",
        },
      },
      "distinct": null,
      "expr": Object {
        "arguments": Array [
          Object {
            "argumentValue": Object {
              "argument": Object {
                "spacing": Array [],
                "type": "Constant",
                "value": "is_available",
              },
              "spacing": Array [],
              "type": "argumentValue",
            },
            "distinct": null,
            "spacing": Array [],
            "type": "argument",
          },
        ],
        "functionCall": "SUM",
        "spacing": Array [],
        "type": "function",
      },
      "spacing": Array [
        ",",
        "
",
        " ",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": Object {
        "spacing": Array [
          " ",
        ],
        "syntax": "AS",
        "type": "alias",
        "value": Object {
          "spacing": Array [
            " ",
          ],
          "type": "Constant",
          "value": "size",
        },
      },
      "distinct": null,
      "expr": Object {
        "arguments": Array [
          Object {
            "argumentValue": Object {
              "argument": Object {
                "quote": "\\"",
                "spacing": Array [],
                "type": "variable",
                "value": "size",
              },
              "spacing": Array [],
              "type": "argumentValue",
            },
            "distinct": null,
            "spacing": Array [],
            "type": "argument",
          },
        ],
        "functionCall": "SUM",
        "spacing": Array [],
        "type": "function",
      },
      "spacing": Array [
        ",",
        "
",
        " ",
        " ",
      ],
      "type": "selectPart",
    },
    Object {
      "alias": Object {
        "spacing": Array [
          " ",
        ],
        "syntax": "AS",
        "type": "alias",
        "value": Object {
          "spacing": Array [
            " ",
          ],
          "type": "Constant",
          "value": "num_rows",
        },
      },
      "distinct": null,
      "expr": Object {
        "arguments": Array [
          Object {
            "argumentValue": Object {
              "argument": Object {
                "quote": "\\"",
                "spacing": Array [],
                "type": "variable",
                "value": "num_rows",
              },
              "spacing": Array [],
              "type": "argumentValue",
            },
            "distinct": null,
            "spacing": Array [],
            "type": "argument",
          },
        ],
        "functionCall": "SUM",
        "spacing": Array [],
        "type": "function",
      },
      "spacing": Array [
        ",",
        "
",
        " ",
        " ",
      ],
      "type": "selectPart",
    },
  ],
  "spacing": Array [],
  "syntax": "SELECT",
  "type": "query",
  "unionAll": null,
  "where": null,
}
`;

exports[`Druid Query Tests parsers the default data sources query to string 1`] = `
"SELECT
  datasource,
  COUNT(*) AS num_segments,
  SUM(is_available) AS num_available_segments,
  SUM(\\"size\\") AS size,
  SUM(\\"num_rows\\") AS num_rows
FROM sys.segments
GROUP BY 1"
`;

exports[`Expression Tests parsers a basic math expression 1`] = `
Object {
  "endSpacing": Array [],
  "expression": Object {
    "lhs": Object {
      "spacing": Array [],
      "type": "Integer",
      "value": "1",
    },
    "operator": Object {
      "operator": "+",
      "spacing": Array [
        " ",
      ],
      "type": "operator",
    },
    "rhs": Object {
      "spacing": Array [
        " ",
      ],
      "type": "Integer",
      "value": "1",
    },
    "spacing": Array [],
    "type": "expression",
  },
  "spacing": Array [],
  "type": "expressionOnly",
}
`;

exports[`Expression Tests parsers an expression with all operators 1`] = `
Object {
  "endSpacing": Array [],
  "expression": Object {
    "lhs": Object {
      "spacing": Array [],
      "type": "Integer",
      "value": "1",
    },
    "operator": Object {
      "operator": "+",
      "spacing": Array [
        " ",
      ],
      "type": "operator",
    },
    "rhs": Object {
      "lhs": Object {
        "spacing": Array [],
        "type": "Integer",
        "value": "1",
      },
      "operator": Object {
        "operator": "/",
        "spacing": Array [
          " ",
        ],
        "type": "operator",
      },
      "rhs": Object {
        "lhs": Object {
          "spacing": Array [],
          "type": "Integer",
          "value": "1",
        },
        "operator": Object {
          "operator": "*",
          "spacing": Array [
            " ",
          ],
          "type": "operator",
        },
        "rhs": Object {
          "lhs": Object {
            "spacing": Array [],
            "type": "Integer",
            "value": "1",
          },
          "operator": Object {
            "operator": "-",
            "spacing": Array [
              " ",
            ],
            "type": "operator",
          },
          "rhs": Object {
            "spacing": Array [
              " ",
            ],
            "type": "Integer",
            "value": "1",
          },
          "spacing": Array [
            " ",
          ],
          "type": "expression",
        },
        "spacing": Array [
          " ",
        ],
        "type": "expression",
      },
      "spacing": Array [
        " ",
      ],
      "type": "expression",
    },
    "spacing": Array [],
    "type": "expression",
  },
  "spacing": Array [],
  "type": "expressionOnly",
}
`;

exports[`Expression Tests parsers an expression with brackets 1`] = `
Object {
  "endSpacing": Array [
    ")",
    "
",
    " ",
    " ",
    " ",
    " ",
  ],
  "expression": Object {
    "lhs": Object {
      "spacing": Array [],
      "type": "Integer",
      "value": "2",
    },
    "operator": Object {
      "operator": "*",
      "spacing": Array [
        " ",
      ],
      "type": "operator",
    },
    "rhs": Object {
      "lhs": Object {
        "spacing": Array [],
        "type": "Integer",
        "value": "3",
      },
      "operator": Object {
        "operator": "+",
        "spacing": Array [
          " ",
        ],
        "type": "operator",
      },
      "rhs": Object {
        "spacing": Array [
          " ",
        ],
        "type": "Integer",
        "value": "4",
      },
      "spacing": Array [
        " ",
        "(",
      ],
      "type": "expression",
    },
    "spacing": Array [],
    "type": "expression",
  },
  "spacing": Array [
    "
",
    " ",
    " ",
    " ",
    " ",
  ],
  "type": "expressionOnly",
}
`;

exports[`Expression Tests parsers an expression with string values 1`] = `
Object {
  "endSpacing": Array [],
  "expression": Object {
    "lhs": Object {
      "quote": "'",
      "spacing": Array [],
      "type": "variable",
      "value": "column",
    },
    "operator": Object {
      "operator": "=",
      "spacing": Array [
        " ",
      ],
      "type": "operator",
    },
    "rhs": Object {
      "quote": "\\"",
      "spacing": Array [
        " ",
      ],
      "type": "variable",
      "value": "value",
    },
    "spacing": Array [],
    "type": "expression",
  },
  "spacing": Array [],
  "type": "expressionOnly",
}
`;

exports[`Stringify Expression Tests parsers a basic math expression to string 1`] = `"1 + 1"`;

exports[`Stringify Expression Tests parsers an expression with all operators to string 1`] = `"1 + 1 / 1 * 1 - 1"`;

exports[`Stringify Expression Tests parsers an expression with brackets to string 1`] = `
"
    2 * (3 + 4)
    "
`;

exports[`Stringify Expression Tests parsers an expression with string values to string 1`] = `"'column' = \\"value\\""`;
