// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Druid Query Tests parsers segments query 1`] = `
SqlQuery {
  "columns": Columns {
    "columns": Array [
      Column {
        "alias": null,
        "ex": String {
          "chars": "segment_id",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "datasource",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "start",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "end",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "size",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "version",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "partition_num",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "num_replicas",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "num_rows",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "is_published",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "is_available",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "is_realtime",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "is_overshadowed",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "payload",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
    ],
    "parens": Array [],
    "spacing": Array [
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
    ],
  },
  "distinct": null,
  "fromClause": FromClause {
    "alias": null,
    "fc": RefExpression {
      "name": "segments",
      "namespace": "sys",
    },
    "keyword": "FROM",
    "parens": undefined,
    "spacing": Array [
      " ",
      null,
    ],
  },
  "groupByClause": null,
  "havingClause": null,
  "limitClause": LimitClause {
    "keyword": "LIMIT",
    "spacing": Array [
      " ",
    ],
    "value": Array [
      Integer {
        "value": "50",
      },
    ],
  },
  "orderByClause": OrderByClause {
    "byKeyword": "BY",
    "orderBy": Array [
      OrderByPart {
        "direction": "DESC",
        "orderBy": OrExpression {
          "ex": Array [
            OrPart {
              "ex": OrExpression {
                "ex": Array [
                  AndPart {
                    "ex": NotExpression {
                      "ex": ComparisonExpression {
                        "ex": AdditiveExpression {
                          "ex": Array [
                            MultiplicativeExpression {
                              "ex": Array [
                                String {
                                  "chars": "start",
                                  "quote": "\\"",
                                  "spacing": Array [
                                    null,
                                    null,
                                  ],
                                },
                              ],
                              "op": Array [],
                              "parens": Array [],
                              "spacing": Array [],
                            },
                          ],
                          "op": Array [],
                          "parens": Array [],
                          "spacing": Array [],
                        },
                        "parens": Array [],
                        "rhs": null,
                        "spacing": null,
                      },
                      "keyword": null,
                      "parens": Array [],
                      "spacing": null,
                    },
                    "keyword": null,
                    "spacing": Array [
                      Array [
                        "",
                      ],
                    ],
                  },
                ],
                "parens": Array [],
                "spacing": Array [],
              },
              "keyword": null,
              "spacing": Array [
                Array [
                  "",
                ],
              ],
            },
          ],
          "parens": Array [],
          "spacing": Array [],
        },
        "spacing": Array [
          " ",
        ],
      },
    ],
    "orderKeyword": "ORDER",
    "spacing": Array [
      " ",
      " ",
    ],
  },
  "spacing": Array [
    null,
    " ",
    "
",
    null,
    null,
    null,
    "
",
    "
",
  ],
  "type": "query",
  "verb": "SELECT",
  "whereClause": null,
}
`;

exports[`Druid Query Tests parsers segments query to string 1`] = `
"SELECT \\"segment_id\\", \\"datasource\\", \\"start\\", \\"end\\", \\"size\\", \\"version\\", \\"partition_num\\", \\"num_replicas\\", \\"num_rows\\", \\"is_published\\", \\"is_available\\", \\"is_realtime\\", \\"is_overshadowed\\", \\"payload\\"
FROM sys.segments
ORDER BY \\"start\\" DESC
LIMIT 50"
`;

exports[`Druid Query Tests parsers servers query 1`] = `
SqlQuery {
  "columns": Columns {
    "columns": Array [
      Column {
        "alias": null,
        "ex": String {
          "chars": "server",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "server_type",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "tier",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "host",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "plaintext_port",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "tls_port",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "curr_size",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "max_size",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": Alias {
          "keyword": "AS",
          "spacing": Array [
            " ",
          ],
          "value": String {
            "chars": "rank",
            "quote": "\\"",
            "spacing": Array [
              null,
              null,
            ],
          },
        },
        "ex": CaseExpression {
          "cases": Array [
            Array [
              "
    ",
              CasePart {
                "spacing": Array [
                  " ",
                  " ",
                  " ",
                ],
                "thenExpr": OrExpression {
                  "ex": Array [
                    OrPart {
                      "ex": OrExpression {
                        "ex": Array [
                          AndPart {
                            "ex": NotExpression {
                              "ex": ComparisonExpression {
                                "ex": AdditiveExpression {
                                  "ex": Array [
                                    MultiplicativeExpression {
                                      "ex": Array [
                                        Integer {
                                          "value": "7",
                                        },
                                      ],
                                      "op": Array [],
                                      "parens": Array [],
                                      "spacing": Array [],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                                "parens": Array [],
                                "rhs": null,
                                "spacing": null,
                              },
                              "keyword": null,
                              "parens": Array [],
                              "spacing": null,
                            },
                            "keyword": null,
                            "spacing": Array [
                              Array [
                                "",
                              ],
                            ],
                          },
                        ],
                        "parens": Array [],
                        "spacing": Array [],
                      },
                      "keyword": null,
                      "spacing": Array [
                        Array [
                          "",
                        ],
                      ],
                    },
                  ],
                  "parens": Array [],
                  "spacing": Array [],
                },
                "thenKeyword": "THEN",
                "whenExpr": OrExpression {
                  "ex": Array [
                    OrPart {
                      "ex": OrExpression {
                        "ex": Array [
                          AndPart {
                            "ex": NotExpression {
                              "ex": ComparisonExpression {
                                "ex": AdditiveExpression {
                                  "ex": Array [
                                    MultiplicativeExpression {
                                      "ex": Array [
                                        String {
                                          "chars": "coordinator",
                                          "quote": "'",
                                          "spacing": Array [
                                            null,
                                            null,
                                          ],
                                        },
                                      ],
                                      "op": Array [],
                                      "parens": Array [],
                                      "spacing": Array [],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                                "parens": Array [],
                                "rhs": null,
                                "spacing": null,
                              },
                              "keyword": null,
                              "parens": Array [],
                              "spacing": null,
                            },
                            "keyword": null,
                            "spacing": Array [
                              Array [
                                "",
                              ],
                            ],
                          },
                        ],
                        "parens": Array [],
                        "spacing": Array [],
                      },
                      "keyword": null,
                      "spacing": Array [
                        Array [
                          "",
                        ],
                      ],
                    },
                  ],
                  "parens": Array [],
                  "spacing": Array [],
                },
                "whenKeyword": "WHEN",
              },
            ],
            Array [
              "
    ",
              CasePart {
                "spacing": Array [
                  " ",
                  " ",
                  " ",
                ],
                "thenExpr": OrExpression {
                  "ex": Array [
                    OrPart {
                      "ex": OrExpression {
                        "ex": Array [
                          AndPart {
                            "ex": NotExpression {
                              "ex": ComparisonExpression {
                                "ex": AdditiveExpression {
                                  "ex": Array [
                                    MultiplicativeExpression {
                                      "ex": Array [
                                        Integer {
                                          "value": "6",
                                        },
                                      ],
                                      "op": Array [],
                                      "parens": Array [],
                                      "spacing": Array [],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                                "parens": Array [],
                                "rhs": null,
                                "spacing": null,
                              },
                              "keyword": null,
                              "parens": Array [],
                              "spacing": null,
                            },
                            "keyword": null,
                            "spacing": Array [
                              Array [
                                "",
                              ],
                            ],
                          },
                        ],
                        "parens": Array [],
                        "spacing": Array [],
                      },
                      "keyword": null,
                      "spacing": Array [
                        Array [
                          "",
                        ],
                      ],
                    },
                  ],
                  "parens": Array [],
                  "spacing": Array [],
                },
                "thenKeyword": "THEN",
                "whenExpr": OrExpression {
                  "ex": Array [
                    OrPart {
                      "ex": OrExpression {
                        "ex": Array [
                          AndPart {
                            "ex": NotExpression {
                              "ex": ComparisonExpression {
                                "ex": AdditiveExpression {
                                  "ex": Array [
                                    MultiplicativeExpression {
                                      "ex": Array [
                                        String {
                                          "chars": "overlord",
                                          "quote": "'",
                                          "spacing": Array [
                                            null,
                                            null,
                                          ],
                                        },
                                      ],
                                      "op": Array [],
                                      "parens": Array [],
                                      "spacing": Array [],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                                "parens": Array [],
                                "rhs": null,
                                "spacing": null,
                              },
                              "keyword": null,
                              "parens": Array [],
                              "spacing": null,
                            },
                            "keyword": null,
                            "spacing": Array [
                              Array [
                                "",
                              ],
                            ],
                          },
                        ],
                        "parens": Array [],
                        "spacing": Array [],
                      },
                      "keyword": null,
                      "spacing": Array [
                        Array [
                          "",
                        ],
                      ],
                    },
                  ],
                  "parens": Array [],
                  "spacing": Array [],
                },
                "whenKeyword": "WHEN",
              },
            ],
            Array [
              "
    ",
              CasePart {
                "spacing": Array [
                  " ",
                  " ",
                  " ",
                ],
                "thenExpr": OrExpression {
                  "ex": Array [
                    OrPart {
                      "ex": OrExpression {
                        "ex": Array [
                          AndPart {
                            "ex": NotExpression {
                              "ex": ComparisonExpression {
                                "ex": AdditiveExpression {
                                  "ex": Array [
                                    MultiplicativeExpression {
                                      "ex": Array [
                                        Integer {
                                          "value": "5",
                                        },
                                      ],
                                      "op": Array [],
                                      "parens": Array [],
                                      "spacing": Array [],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                                "parens": Array [],
                                "rhs": null,
                                "spacing": null,
                              },
                              "keyword": null,
                              "parens": Array [],
                              "spacing": null,
                            },
                            "keyword": null,
                            "spacing": Array [
                              Array [
                                "",
                              ],
                            ],
                          },
                        ],
                        "parens": Array [],
                        "spacing": Array [],
                      },
                      "keyword": null,
                      "spacing": Array [
                        Array [
                          "",
                        ],
                      ],
                    },
                  ],
                  "parens": Array [],
                  "spacing": Array [],
                },
                "thenKeyword": "THEN",
                "whenExpr": OrExpression {
                  "ex": Array [
                    OrPart {
                      "ex": OrExpression {
                        "ex": Array [
                          AndPart {
                            "ex": NotExpression {
                              "ex": ComparisonExpression {
                                "ex": AdditiveExpression {
                                  "ex": Array [
                                    MultiplicativeExpression {
                                      "ex": Array [
                                        String {
                                          "chars": "router",
                                          "quote": "'",
                                          "spacing": Array [
                                            null,
                                            null,
                                          ],
                                        },
                                      ],
                                      "op": Array [],
                                      "parens": Array [],
                                      "spacing": Array [],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                                "parens": Array [],
                                "rhs": null,
                                "spacing": null,
                              },
                              "keyword": null,
                              "parens": Array [],
                              "spacing": null,
                            },
                            "keyword": null,
                            "spacing": Array [
                              Array [
                                "",
                              ],
                            ],
                          },
                        ],
                        "parens": Array [],
                        "spacing": Array [],
                      },
                      "keyword": null,
                      "spacing": Array [
                        Array [
                          "",
                        ],
                      ],
                    },
                  ],
                  "parens": Array [],
                  "spacing": Array [],
                },
                "whenKeyword": "WHEN",
              },
            ],
            Array [
              "
    ",
              CasePart {
                "spacing": Array [
                  " ",
                  " ",
                  " ",
                ],
                "thenExpr": OrExpression {
                  "ex": Array [
                    OrPart {
                      "ex": OrExpression {
                        "ex": Array [
                          AndPart {
                            "ex": NotExpression {
                              "ex": ComparisonExpression {
                                "ex": AdditiveExpression {
                                  "ex": Array [
                                    MultiplicativeExpression {
                                      "ex": Array [
                                        Integer {
                                          "value": "4",
                                        },
                                      ],
                                      "op": Array [],
                                      "parens": Array [],
                                      "spacing": Array [],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                                "parens": Array [],
                                "rhs": null,
                                "spacing": null,
                              },
                              "keyword": null,
                              "parens": Array [],
                              "spacing": null,
                            },
                            "keyword": null,
                            "spacing": Array [
                              Array [
                                "",
                              ],
                            ],
                          },
                        ],
                        "parens": Array [],
                        "spacing": Array [],
                      },
                      "keyword": null,
                      "spacing": Array [
                        Array [
                          "",
                        ],
                      ],
                    },
                  ],
                  "parens": Array [],
                  "spacing": Array [],
                },
                "thenKeyword": "THEN",
                "whenExpr": OrExpression {
                  "ex": Array [
                    OrPart {
                      "ex": OrExpression {
                        "ex": Array [
                          AndPart {
                            "ex": NotExpression {
                              "ex": ComparisonExpression {
                                "ex": AdditiveExpression {
                                  "ex": Array [
                                    MultiplicativeExpression {
                                      "ex": Array [
                                        String {
                                          "chars": "broker",
                                          "quote": "'",
                                          "spacing": Array [
                                            null,
                                            null,
                                          ],
                                        },
                                      ],
                                      "op": Array [],
                                      "parens": Array [],
                                      "spacing": Array [],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                                "parens": Array [],
                                "rhs": null,
                                "spacing": null,
                              },
                              "keyword": null,
                              "parens": Array [],
                              "spacing": null,
                            },
                            "keyword": null,
                            "spacing": Array [
                              Array [
                                "",
                              ],
                            ],
                          },
                        ],
                        "parens": Array [],
                        "spacing": Array [],
                      },
                      "keyword": null,
                      "spacing": Array [
                        Array [
                          "",
                        ],
                      ],
                    },
                  ],
                  "parens": Array [],
                  "spacing": Array [],
                },
                "whenKeyword": "WHEN",
              },
            ],
            Array [
              "
    ",
              CasePart {
                "spacing": Array [
                  " ",
                  " ",
                  " ",
                ],
                "thenExpr": OrExpression {
                  "ex": Array [
                    OrPart {
                      "ex": OrExpression {
                        "ex": Array [
                          AndPart {
                            "ex": NotExpression {
                              "ex": ComparisonExpression {
                                "ex": AdditiveExpression {
                                  "ex": Array [
                                    MultiplicativeExpression {
                                      "ex": Array [
                                        Integer {
                                          "value": "3",
                                        },
                                      ],
                                      "op": Array [],
                                      "parens": Array [],
                                      "spacing": Array [],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                                "parens": Array [],
                                "rhs": null,
                                "spacing": null,
                              },
                              "keyword": null,
                              "parens": Array [],
                              "spacing": null,
                            },
                            "keyword": null,
                            "spacing": Array [
                              Array [
                                "",
                              ],
                            ],
                          },
                        ],
                        "parens": Array [],
                        "spacing": Array [],
                      },
                      "keyword": null,
                      "spacing": Array [
                        Array [
                          "",
                        ],
                      ],
                    },
                  ],
                  "parens": Array [],
                  "spacing": Array [],
                },
                "thenKeyword": "THEN",
                "whenExpr": OrExpression {
                  "ex": Array [
                    OrPart {
                      "ex": OrExpression {
                        "ex": Array [
                          AndPart {
                            "ex": NotExpression {
                              "ex": ComparisonExpression {
                                "ex": AdditiveExpression {
                                  "ex": Array [
                                    MultiplicativeExpression {
                                      "ex": Array [
                                        String {
                                          "chars": "historical",
                                          "quote": "'",
                                          "spacing": Array [
                                            null,
                                            null,
                                          ],
                                        },
                                      ],
                                      "op": Array [],
                                      "parens": Array [],
                                      "spacing": Array [],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                                "parens": Array [],
                                "rhs": null,
                                "spacing": null,
                              },
                              "keyword": null,
                              "parens": Array [],
                              "spacing": null,
                            },
                            "keyword": null,
                            "spacing": Array [
                              Array [
                                "",
                              ],
                            ],
                          },
                        ],
                        "parens": Array [],
                        "spacing": Array [],
                      },
                      "keyword": null,
                      "spacing": Array [
                        Array [
                          "",
                        ],
                      ],
                    },
                  ],
                  "parens": Array [],
                  "spacing": Array [],
                },
                "whenKeyword": "WHEN",
              },
            ],
            Array [
              "
    ",
              CasePart {
                "spacing": Array [
                  " ",
                  " ",
                  " ",
                ],
                "thenExpr": OrExpression {
                  "ex": Array [
                    OrPart {
                      "ex": OrExpression {
                        "ex": Array [
                          AndPart {
                            "ex": NotExpression {
                              "ex": ComparisonExpression {
                                "ex": AdditiveExpression {
                                  "ex": Array [
                                    MultiplicativeExpression {
                                      "ex": Array [
                                        Integer {
                                          "value": "2",
                                        },
                                      ],
                                      "op": Array [],
                                      "parens": Array [],
                                      "spacing": Array [],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                                "parens": Array [],
                                "rhs": null,
                                "spacing": null,
                              },
                              "keyword": null,
                              "parens": Array [],
                              "spacing": null,
                            },
                            "keyword": null,
                            "spacing": Array [
                              Array [
                                "",
                              ],
                            ],
                          },
                        ],
                        "parens": Array [],
                        "spacing": Array [],
                      },
                      "keyword": null,
                      "spacing": Array [
                        Array [
                          "",
                        ],
                      ],
                    },
                  ],
                  "parens": Array [],
                  "spacing": Array [],
                },
                "thenKeyword": "THEN",
                "whenExpr": OrExpression {
                  "ex": Array [
                    OrPart {
                      "ex": OrExpression {
                        "ex": Array [
                          AndPart {
                            "ex": NotExpression {
                              "ex": ComparisonExpression {
                                "ex": AdditiveExpression {
                                  "ex": Array [
                                    MultiplicativeExpression {
                                      "ex": Array [
                                        String {
                                          "chars": "middle_manager",
                                          "quote": "'",
                                          "spacing": Array [
                                            null,
                                            null,
                                          ],
                                        },
                                      ],
                                      "op": Array [],
                                      "parens": Array [],
                                      "spacing": Array [],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                                "parens": Array [],
                                "rhs": null,
                                "spacing": null,
                              },
                              "keyword": null,
                              "parens": Array [],
                              "spacing": null,
                            },
                            "keyword": null,
                            "spacing": Array [
                              Array [
                                "",
                              ],
                            ],
                          },
                        ],
                        "parens": Array [],
                        "spacing": Array [],
                      },
                      "keyword": null,
                      "spacing": Array [
                        Array [
                          "",
                        ],
                      ],
                    },
                  ],
                  "parens": Array [],
                  "spacing": Array [],
                },
                "whenKeyword": "WHEN",
              },
            ],
            Array [
              "
    ",
              CasePart {
                "spacing": Array [
                  " ",
                  " ",
                  " ",
                ],
                "thenExpr": OrExpression {
                  "ex": Array [
                    OrPart {
                      "ex": OrExpression {
                        "ex": Array [
                          AndPart {
                            "ex": NotExpression {
                              "ex": ComparisonExpression {
                                "ex": AdditiveExpression {
                                  "ex": Array [
                                    MultiplicativeExpression {
                                      "ex": Array [
                                        Integer {
                                          "value": "1",
                                        },
                                      ],
                                      "op": Array [],
                                      "parens": Array [],
                                      "spacing": Array [],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                                "parens": Array [],
                                "rhs": null,
                                "spacing": null,
                              },
                              "keyword": null,
                              "parens": Array [],
                              "spacing": null,
                            },
                            "keyword": null,
                            "spacing": Array [
                              Array [
                                "",
                              ],
                            ],
                          },
                        ],
                        "parens": Array [],
                        "spacing": Array [],
                      },
                      "keyword": null,
                      "spacing": Array [
                        Array [
                          "",
                        ],
                      ],
                    },
                  ],
                  "parens": Array [],
                  "spacing": Array [],
                },
                "thenKeyword": "THEN",
                "whenExpr": OrExpression {
                  "ex": Array [
                    OrPart {
                      "ex": OrExpression {
                        "ex": Array [
                          AndPart {
                            "ex": NotExpression {
                              "ex": ComparisonExpression {
                                "ex": AdditiveExpression {
                                  "ex": Array [
                                    MultiplicativeExpression {
                                      "ex": Array [
                                        String {
                                          "chars": "peon",
                                          "quote": "'",
                                          "spacing": Array [
                                            null,
                                            null,
                                          ],
                                        },
                                      ],
                                      "op": Array [],
                                      "parens": Array [],
                                      "spacing": Array [],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                                "parens": Array [],
                                "rhs": null,
                                "spacing": null,
                              },
                              "keyword": null,
                              "parens": Array [],
                              "spacing": null,
                            },
                            "keyword": null,
                            "spacing": Array [
                              Array [
                                "",
                              ],
                            ],
                          },
                        ],
                        "parens": Array [],
                        "spacing": Array [],
                      },
                      "keyword": null,
                      "spacing": Array [
                        Array [
                          "",
                        ],
                      ],
                    },
                  ],
                  "parens": Array [],
                  "spacing": Array [],
                },
                "whenKeyword": "WHEN",
              },
            ],
          ],
          "else": Array [
            "
    ",
            "ELSE",
            " ",
            OrExpression {
              "ex": Array [
                OrPart {
                  "ex": OrExpression {
                    "ex": Array [
                      AndPart {
                        "ex": NotExpression {
                          "ex": ComparisonExpression {
                            "ex": AdditiveExpression {
                              "ex": Array [
                                MultiplicativeExpression {
                                  "ex": Array [
                                    Integer {
                                      "value": "0",
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                              ],
                              "op": Array [],
                              "parens": Array [],
                              "spacing": Array [],
                            },
                            "parens": Array [],
                            "rhs": null,
                            "spacing": null,
                          },
                          "keyword": null,
                          "parens": Array [],
                          "spacing": null,
                        },
                        "keyword": null,
                        "spacing": Array [
                          Array [
                            "",
                          ],
                        ],
                      },
                    ],
                    "parens": Array [],
                    "spacing": Array [],
                  },
                  "keyword": null,
                  "spacing": Array [
                    Array [
                      "",
                    ],
                  ],
                },
              ],
              "parens": Array [],
              "spacing": Array [],
            },
          ],
          "end": Array [
            "
    ",
            "END",
          ],
          "expr": Array [
            " ",
            undefined,
            OrExpression {
              "ex": Array [
                OrPart {
                  "ex": OrExpression {
                    "ex": Array [
                      AndPart {
                        "ex": NotExpression {
                          "ex": ComparisonExpression {
                            "ex": AdditiveExpression {
                              "ex": Array [
                                MultiplicativeExpression {
                                  "ex": Array [
                                    String {
                                      "chars": "server_type",
                                      "quote": "\\"",
                                      "spacing": Array [
                                        null,
                                        null,
                                      ],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                              ],
                              "op": Array [],
                              "parens": Array [],
                              "spacing": Array [],
                            },
                            "parens": Array [],
                            "rhs": null,
                            "spacing": null,
                          },
                          "keyword": null,
                          "parens": Array [],
                          "spacing": null,
                        },
                        "keyword": null,
                        "spacing": Array [
                          Array [
                            "",
                          ],
                        ],
                      },
                    ],
                    "parens": Array [],
                    "spacing": Array [],
                  },
                  "keyword": null,
                  "spacing": Array [
                    Array [
                      "",
                    ],
                  ],
                },
              ],
              "parens": Array [],
              "spacing": Array [],
            },
          ],
          "keyword": "CASE",
          "parens": Array [
            Object {
              "close": Array [
                "
  ",
                ")",
              ],
              "open": Array [
                "(",
                "
    ",
              ],
            },
          ],
        },
        "parens": Array [],
        "spacing": Array [
          " ",
        ],
      },
    ],
    "parens": Array [],
    "spacing": Array [
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      "
  ",
    ],
  },
  "distinct": null,
  "fromClause": FromClause {
    "alias": null,
    "fc": RefExpression {
      "name": "servers",
      "namespace": "sys",
    },
    "keyword": "FROM",
    "parens": undefined,
    "spacing": Array [
      " ",
      null,
    ],
  },
  "groupByClause": null,
  "havingClause": null,
  "limitClause": null,
  "orderByClause": OrderByClause {
    "byKeyword": "BY",
    "orderBy": Array [
      OrderByPart {
        "direction": "DESC",
        "orderBy": OrExpression {
          "ex": Array [
            OrPart {
              "ex": OrExpression {
                "ex": Array [
                  AndPart {
                    "ex": NotExpression {
                      "ex": ComparisonExpression {
                        "ex": AdditiveExpression {
                          "ex": Array [
                            MultiplicativeExpression {
                              "ex": Array [
                                String {
                                  "chars": "rank",
                                  "quote": "\\"",
                                  "spacing": Array [
                                    null,
                                    null,
                                  ],
                                },
                              ],
                              "op": Array [],
                              "parens": Array [],
                              "spacing": Array [],
                            },
                          ],
                          "op": Array [],
                          "parens": Array [],
                          "spacing": Array [],
                        },
                        "parens": Array [],
                        "rhs": null,
                        "spacing": null,
                      },
                      "keyword": null,
                      "parens": Array [],
                      "spacing": null,
                    },
                    "keyword": null,
                    "spacing": Array [
                      Array [
                        "",
                      ],
                    ],
                  },
                ],
                "parens": Array [],
                "spacing": Array [],
              },
              "keyword": null,
              "spacing": Array [
                Array [
                  "",
                ],
              ],
            },
          ],
          "parens": Array [],
          "spacing": Array [],
        },
        "spacing": Array [
          " ",
        ],
      },
      OrderByPart {
        "direction": "DESC",
        "orderBy": OrExpression {
          "ex": Array [
            OrPart {
              "ex": OrExpression {
                "ex": Array [
                  AndPart {
                    "ex": NotExpression {
                      "ex": ComparisonExpression {
                        "ex": AdditiveExpression {
                          "ex": Array [
                            MultiplicativeExpression {
                              "ex": Array [
                                String {
                                  "chars": "server",
                                  "quote": "\\"",
                                  "spacing": Array [
                                    null,
                                    null,
                                  ],
                                },
                              ],
                              "op": Array [],
                              "parens": Array [],
                              "spacing": Array [],
                            },
                          ],
                          "op": Array [],
                          "parens": Array [],
                          "spacing": Array [],
                        },
                        "parens": Array [],
                        "rhs": null,
                        "spacing": null,
                      },
                      "keyword": null,
                      "parens": Array [],
                      "spacing": null,
                    },
                    "keyword": null,
                    "spacing": Array [
                      Array [
                        "",
                      ],
                    ],
                  },
                ],
                "parens": Array [],
                "spacing": Array [],
              },
              "keyword": null,
              "spacing": Array [
                Array [
                  "",
                ],
              ],
            },
          ],
          "parens": Array [],
          "spacing": Array [],
        },
        "spacing": Array [
          " ",
        ],
      },
    ],
    "orderKeyword": "ORDER",
    "spacing": Array [
      " ",
      " ",
      " ",
    ],
  },
  "spacing": Array [
    null,
    "
  ",
    "
",
    null,
    null,
    null,
    "
",
    null,
  ],
  "type": "query",
  "verb": "SELECT",
  "whereClause": null,
}
`;

exports[`Druid Query Tests parsers servers query to string 1`] = `
"SELECT
  \\"server\\", \\"server_type\\", \\"tier\\", \\"host\\", \\"plaintext_port\\", \\"tls_port\\", \\"curr_size\\", \\"max_size\\",
  (
    CASE \\"server_type\\"
    WHEN 'coordinator' THEN 7
    WHEN 'overlord' THEN 6
    WHEN 'router' THEN 5
    WHEN 'broker' THEN 4
    WHEN 'historical' THEN 3
    WHEN 'middle_manager' THEN 2
    WHEN 'peon' THEN 1
    ELSE 0
    END
  ) AS \\"rank\\"
FROM sys.servers
ORDER BY \\"rank\\" DESC, \\"server\\" DESC"
`;

exports[`Druid Query Tests parsers servers query with columns in brackets to string 1`] = `
"SELECT
  (null\\"server\\"null), \\"server_type\\", \\"tier\\", \\"host\\", \\"plaintext_port\\", \\"tls_port\\", \\"curr_size\\", \\"max_size\\",
  (
    CASE \\"server_type\\"
    WHEN 'coordinator' THEN 7
    WHEN 'overlord' THEN 6
    WHEN 'router' THEN 5
    WHEN 'broker' THEN 4
    WHEN 'historical' THEN 3
    WHEN 'middle_manager' THEN 2
    WHEN 'peon' THEN 1
    ELSE 0
    END
  ) AS \\"rank\\"
FROM sys.servers
ORDER BY \\"rank\\" DESC, \\"server\\" DESC"
`;

exports[`Druid Query Tests parsers task query 1`] = `
SqlQuery {
  "columns": Columns {
    "columns": Array [
      Column {
        "alias": null,
        "ex": String {
          "chars": "task_id",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "type",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "datasource",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "created_time",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "location",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "duration",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": null,
        "ex": String {
          "chars": "error_msg",
          "quote": "\\"",
          "spacing": Array [
            null,
            null,
          ],
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": Alias {
          "keyword": "AS",
          "spacing": Array [
            " ",
          ],
          "value": String {
            "chars": "status",
            "quote": "\\"",
            "spacing": Array [
              null,
              null,
            ],
          },
        },
        "ex": CaseExpression {
          "cases": Array [
            Array [
              " ",
              CasePart {
                "spacing": Array [
                  " ",
                  " ",
                  " ",
                ],
                "thenExpr": OrExpression {
                  "ex": Array [
                    OrPart {
                      "ex": OrExpression {
                        "ex": Array [
                          AndPart {
                            "ex": NotExpression {
                              "ex": ComparisonExpression {
                                "ex": AdditiveExpression {
                                  "ex": Array [
                                    MultiplicativeExpression {
                                      "ex": Array [
                                        String {
                                          "chars": "runner_status",
                                          "quote": "\\"",
                                          "spacing": Array [
                                            null,
                                            null,
                                          ],
                                        },
                                      ],
                                      "op": Array [],
                                      "parens": Array [],
                                      "spacing": Array [],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                                "parens": Array [],
                                "rhs": null,
                                "spacing": null,
                              },
                              "keyword": null,
                              "parens": Array [],
                              "spacing": null,
                            },
                            "keyword": null,
                            "spacing": Array [
                              Array [
                                "",
                              ],
                            ],
                          },
                        ],
                        "parens": Array [],
                        "spacing": Array [],
                      },
                      "keyword": null,
                      "spacing": Array [
                        Array [
                          "",
                        ],
                      ],
                    },
                  ],
                  "parens": Array [],
                  "spacing": Array [],
                },
                "thenKeyword": "THEN",
                "whenExpr": OrExpression {
                  "ex": Array [
                    OrPart {
                      "ex": OrExpression {
                        "ex": Array [
                          AndPart {
                            "ex": NotExpression {
                              "ex": ComparisonExpression {
                                "ex": AdditiveExpression {
                                  "ex": Array [
                                    MultiplicativeExpression {
                                      "ex": Array [
                                        String {
                                          "chars": "status",
                                          "quote": "\\"",
                                          "spacing": Array [
                                            null,
                                            null,
                                          ],
                                        },
                                      ],
                                      "op": Array [],
                                      "parens": Array [],
                                      "spacing": Array [],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                                "parens": Array [],
                                "rhs": ComparisonExpressionRhs {
                                  "is": null,
                                  "not": null,
                                  "op": "=",
                                  "parens": Array [],
                                  "rhs": AdditiveExpression {
                                    "ex": Array [
                                      MultiplicativeExpression {
                                        "ex": Array [
                                          String {
                                            "chars": "RUNNING",
                                            "quote": "'",
                                            "spacing": Array [
                                              null,
                                              null,
                                            ],
                                          },
                                        ],
                                        "op": Array [],
                                        "parens": Array [],
                                        "spacing": Array [],
                                      },
                                    ],
                                    "op": Array [],
                                    "parens": Array [],
                                    "spacing": Array [],
                                  },
                                  "spacing": Array [
                                    " ",
                                  ],
                                },
                                "spacing": " ",
                              },
                              "keyword": null,
                              "parens": Array [],
                              "spacing": null,
                            },
                            "keyword": null,
                            "spacing": Array [
                              Array [
                                "",
                              ],
                            ],
                          },
                        ],
                        "parens": Array [],
                        "spacing": Array [],
                      },
                      "keyword": null,
                      "spacing": Array [
                        Array [
                          "",
                        ],
                      ],
                    },
                  ],
                  "parens": Array [],
                  "spacing": Array [],
                },
                "whenKeyword": "WHEN",
              },
            ],
          ],
          "else": Array [
            " ",
            "ELSE",
            " ",
            OrExpression {
              "ex": Array [
                OrPart {
                  "ex": OrExpression {
                    "ex": Array [
                      AndPart {
                        "ex": NotExpression {
                          "ex": ComparisonExpression {
                            "ex": AdditiveExpression {
                              "ex": Array [
                                MultiplicativeExpression {
                                  "ex": Array [
                                    String {
                                      "chars": "status",
                                      "quote": "\\"",
                                      "spacing": Array [
                                        null,
                                        null,
                                      ],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                              ],
                              "op": Array [],
                              "parens": Array [],
                              "spacing": Array [],
                            },
                            "parens": Array [],
                            "rhs": null,
                            "spacing": null,
                          },
                          "keyword": null,
                          "parens": Array [],
                          "spacing": null,
                        },
                        "keyword": null,
                        "spacing": Array [
                          Array [
                            "",
                          ],
                        ],
                      },
                    ],
                    "parens": Array [],
                    "spacing": Array [],
                  },
                  "keyword": null,
                  "spacing": Array [
                    Array [
                      "",
                    ],
                  ],
                },
              ],
              "parens": Array [],
              "spacing": Array [],
            },
          ],
          "end": Array [
            " ",
            "END",
          ],
          "expr": null,
          "keyword": "CASE",
          "parens": Array [],
        },
        "parens": Array [],
        "spacing": Array [
          " ",
        ],
      },
      Column {
        "alias": Alias {
          "keyword": "AS",
          "spacing": Array [
            " ",
          ],
          "value": String {
            "chars": "rank",
            "quote": "\\"",
            "spacing": Array [
              null,
              null,
            ],
          },
        },
        "ex": CaseExpression {
          "cases": Array [
            Array [
              " ",
              CasePart {
                "spacing": Array [
                  " ",
                  " ",
                  "
     ",
                ],
                "thenExpr": OrExpression {
                  "ex": Array [
                    OrPart {
                      "ex": OrExpression {
                        "ex": Array [
                          AndPart {
                            "ex": NotExpression {
                              "ex": ComparisonExpression {
                                "ex": AdditiveExpression {
                                  "ex": Array [
                                    MultiplicativeExpression {
                                      "ex": Array [
                                        CaseExpression {
                                          "cases": Array [
                                            Array [
                                              " ",
                                              CasePart {
                                                "spacing": Array [
                                                  " ",
                                                  " ",
                                                  " ",
                                                ],
                                                "thenExpr": OrExpression {
                                                  "ex": Array [
                                                    OrPart {
                                                      "ex": OrExpression {
                                                        "ex": Array [
                                                          AndPart {
                                                            "ex": NotExpression {
                                                              "ex": ComparisonExpression {
                                                                "ex": AdditiveExpression {
                                                                  "ex": Array [
                                                                    MultiplicativeExpression {
                                                                      "ex": Array [
                                                                        Integer {
                                                                          "value": "4",
                                                                        },
                                                                      ],
                                                                      "op": Array [],
                                                                      "parens": Array [],
                                                                      "spacing": Array [],
                                                                    },
                                                                  ],
                                                                  "op": Array [],
                                                                  "parens": Array [],
                                                                  "spacing": Array [],
                                                                },
                                                                "parens": Array [],
                                                                "rhs": null,
                                                                "spacing": null,
                                                              },
                                                              "keyword": null,
                                                              "parens": Array [],
                                                              "spacing": null,
                                                            },
                                                            "keyword": null,
                                                            "spacing": Array [
                                                              Array [
                                                                "",
                                                              ],
                                                            ],
                                                          },
                                                        ],
                                                        "parens": Array [],
                                                        "spacing": Array [],
                                                      },
                                                      "keyword": null,
                                                      "spacing": Array [
                                                        Array [
                                                          "",
                                                        ],
                                                      ],
                                                    },
                                                  ],
                                                  "parens": Array [],
                                                  "spacing": Array [],
                                                },
                                                "thenKeyword": "THEN",
                                                "whenExpr": OrExpression {
                                                  "ex": Array [
                                                    OrPart {
                                                      "ex": OrExpression {
                                                        "ex": Array [
                                                          AndPart {
                                                            "ex": NotExpression {
                                                              "ex": ComparisonExpression {
                                                                "ex": AdditiveExpression {
                                                                  "ex": Array [
                                                                    MultiplicativeExpression {
                                                                      "ex": Array [
                                                                        String {
                                                                          "chars": "RUNNING",
                                                                          "quote": "'",
                                                                          "spacing": Array [
                                                                            null,
                                                                            null,
                                                                          ],
                                                                        },
                                                                      ],
                                                                      "op": Array [],
                                                                      "parens": Array [],
                                                                      "spacing": Array [],
                                                                    },
                                                                  ],
                                                                  "op": Array [],
                                                                  "parens": Array [],
                                                                  "spacing": Array [],
                                                                },
                                                                "parens": Array [],
                                                                "rhs": null,
                                                                "spacing": null,
                                                              },
                                                              "keyword": null,
                                                              "parens": Array [],
                                                              "spacing": null,
                                                            },
                                                            "keyword": null,
                                                            "spacing": Array [
                                                              Array [
                                                                "",
                                                              ],
                                                            ],
                                                          },
                                                        ],
                                                        "parens": Array [],
                                                        "spacing": Array [],
                                                      },
                                                      "keyword": null,
                                                      "spacing": Array [
                                                        Array [
                                                          "",
                                                        ],
                                                      ],
                                                    },
                                                  ],
                                                  "parens": Array [],
                                                  "spacing": Array [],
                                                },
                                                "whenKeyword": "WHEN",
                                              },
                                            ],
                                            Array [
                                              " ",
                                              CasePart {
                                                "spacing": Array [
                                                  " ",
                                                  " ",
                                                  " ",
                                                ],
                                                "thenExpr": OrExpression {
                                                  "ex": Array [
                                                    OrPart {
                                                      "ex": OrExpression {
                                                        "ex": Array [
                                                          AndPart {
                                                            "ex": NotExpression {
                                                              "ex": ComparisonExpression {
                                                                "ex": AdditiveExpression {
                                                                  "ex": Array [
                                                                    MultiplicativeExpression {
                                                                      "ex": Array [
                                                                        Integer {
                                                                          "value": "3",
                                                                        },
                                                                      ],
                                                                      "op": Array [],
                                                                      "parens": Array [],
                                                                      "spacing": Array [],
                                                                    },
                                                                  ],
                                                                  "op": Array [],
                                                                  "parens": Array [],
                                                                  "spacing": Array [],
                                                                },
                                                                "parens": Array [],
                                                                "rhs": null,
                                                                "spacing": null,
                                                              },
                                                              "keyword": null,
                                                              "parens": Array [],
                                                              "spacing": null,
                                                            },
                                                            "keyword": null,
                                                            "spacing": Array [
                                                              Array [
                                                                "",
                                                              ],
                                                            ],
                                                          },
                                                        ],
                                                        "parens": Array [],
                                                        "spacing": Array [],
                                                      },
                                                      "keyword": null,
                                                      "spacing": Array [
                                                        Array [
                                                          "",
                                                        ],
                                                      ],
                                                    },
                                                  ],
                                                  "parens": Array [],
                                                  "spacing": Array [],
                                                },
                                                "thenKeyword": "THEN",
                                                "whenExpr": OrExpression {
                                                  "ex": Array [
                                                    OrPart {
                                                      "ex": OrExpression {
                                                        "ex": Array [
                                                          AndPart {
                                                            "ex": NotExpression {
                                                              "ex": ComparisonExpression {
                                                                "ex": AdditiveExpression {
                                                                  "ex": Array [
                                                                    MultiplicativeExpression {
                                                                      "ex": Array [
                                                                        String {
                                                                          "chars": "PENDING",
                                                                          "quote": "'",
                                                                          "spacing": Array [
                                                                            null,
                                                                            null,
                                                                          ],
                                                                        },
                                                                      ],
                                                                      "op": Array [],
                                                                      "parens": Array [],
                                                                      "spacing": Array [],
                                                                    },
                                                                  ],
                                                                  "op": Array [],
                                                                  "parens": Array [],
                                                                  "spacing": Array [],
                                                                },
                                                                "parens": Array [],
                                                                "rhs": null,
                                                                "spacing": null,
                                                              },
                                                              "keyword": null,
                                                              "parens": Array [],
                                                              "spacing": null,
                                                            },
                                                            "keyword": null,
                                                            "spacing": Array [
                                                              Array [
                                                                "",
                                                              ],
                                                            ],
                                                          },
                                                        ],
                                                        "parens": Array [],
                                                        "spacing": Array [],
                                                      },
                                                      "keyword": null,
                                                      "spacing": Array [
                                                        Array [
                                                          "",
                                                        ],
                                                      ],
                                                    },
                                                  ],
                                                  "parens": Array [],
                                                  "spacing": Array [],
                                                },
                                                "whenKeyword": "WHEN",
                                              },
                                            ],
                                          ],
                                          "else": Array [
                                            " ",
                                            "ELSE",
                                            " ",
                                            OrExpression {
                                              "ex": Array [
                                                OrPart {
                                                  "ex": OrExpression {
                                                    "ex": Array [
                                                      AndPart {
                                                        "ex": NotExpression {
                                                          "ex": ComparisonExpression {
                                                            "ex": AdditiveExpression {
                                                              "ex": Array [
                                                                MultiplicativeExpression {
                                                                  "ex": Array [
                                                                    Integer {
                                                                      "value": "2",
                                                                    },
                                                                  ],
                                                                  "op": Array [],
                                                                  "parens": Array [],
                                                                  "spacing": Array [],
                                                                },
                                                              ],
                                                              "op": Array [],
                                                              "parens": Array [],
                                                              "spacing": Array [],
                                                            },
                                                            "parens": Array [],
                                                            "rhs": null,
                                                            "spacing": null,
                                                          },
                                                          "keyword": null,
                                                          "parens": Array [],
                                                          "spacing": null,
                                                        },
                                                        "keyword": null,
                                                        "spacing": Array [
                                                          Array [
                                                            "",
                                                          ],
                                                        ],
                                                      },
                                                    ],
                                                    "parens": Array [],
                                                    "spacing": Array [],
                                                  },
                                                  "keyword": null,
                                                  "spacing": Array [
                                                    Array [
                                                      "",
                                                    ],
                                                  ],
                                                },
                                              ],
                                              "parens": Array [],
                                              "spacing": Array [],
                                            },
                                          ],
                                          "end": Array [
                                            " ",
                                            "END",
                                          ],
                                          "expr": Array [
                                            " ",
                                            undefined,
                                            OrExpression {
                                              "ex": Array [
                                                OrPart {
                                                  "ex": OrExpression {
                                                    "ex": Array [
                                                      AndPart {
                                                        "ex": NotExpression {
                                                          "ex": ComparisonExpression {
                                                            "ex": AdditiveExpression {
                                                              "ex": Array [
                                                                MultiplicativeExpression {
                                                                  "ex": Array [
                                                                    String {
                                                                      "chars": "runner_status",
                                                                      "quote": "\\"",
                                                                      "spacing": Array [
                                                                        null,
                                                                        null,
                                                                      ],
                                                                    },
                                                                  ],
                                                                  "op": Array [],
                                                                  "parens": Array [],
                                                                  "spacing": Array [],
                                                                },
                                                              ],
                                                              "op": Array [],
                                                              "parens": Array [],
                                                              "spacing": Array [],
                                                            },
                                                            "parens": Array [],
                                                            "rhs": null,
                                                            "spacing": null,
                                                          },
                                                          "keyword": null,
                                                          "parens": Array [],
                                                          "spacing": null,
                                                        },
                                                        "keyword": null,
                                                        "spacing": Array [
                                                          Array [
                                                            "",
                                                          ],
                                                        ],
                                                      },
                                                    ],
                                                    "parens": Array [],
                                                    "spacing": Array [],
                                                  },
                                                  "keyword": null,
                                                  "spacing": Array [
                                                    Array [
                                                      "",
                                                    ],
                                                  ],
                                                },
                                              ],
                                              "parens": Array [],
                                              "spacing": Array [],
                                            },
                                          ],
                                          "keyword": "CASE",
                                          "parens": Array [
                                            Object {
                                              "close": Array [
                                                null,
                                                ")",
                                              ],
                                              "open": Array [
                                                "(",
                                                null,
                                              ],
                                            },
                                          ],
                                        },
                                      ],
                                      "op": Array [],
                                      "parens": Array [],
                                      "spacing": Array [],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                                "parens": Array [],
                                "rhs": null,
                                "spacing": null,
                              },
                              "keyword": null,
                              "parens": Array [],
                              "spacing": null,
                            },
                            "keyword": null,
                            "spacing": Array [
                              Array [
                                "",
                              ],
                            ],
                          },
                        ],
                        "parens": Array [],
                        "spacing": Array [],
                      },
                      "keyword": null,
                      "spacing": Array [
                        Array [
                          "",
                        ],
                      ],
                    },
                  ],
                  "parens": Array [],
                  "spacing": Array [],
                },
                "thenKeyword": "THEN",
                "whenExpr": OrExpression {
                  "ex": Array [
                    OrPart {
                      "ex": OrExpression {
                        "ex": Array [
                          AndPart {
                            "ex": NotExpression {
                              "ex": ComparisonExpression {
                                "ex": AdditiveExpression {
                                  "ex": Array [
                                    MultiplicativeExpression {
                                      "ex": Array [
                                        String {
                                          "chars": "status",
                                          "quote": "\\"",
                                          "spacing": Array [
                                            null,
                                            null,
                                          ],
                                        },
                                      ],
                                      "op": Array [],
                                      "parens": Array [],
                                      "spacing": Array [],
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                                "parens": Array [],
                                "rhs": ComparisonExpressionRhs {
                                  "is": null,
                                  "not": null,
                                  "op": "=",
                                  "parens": Array [],
                                  "rhs": AdditiveExpression {
                                    "ex": Array [
                                      MultiplicativeExpression {
                                        "ex": Array [
                                          String {
                                            "chars": "RUNNING",
                                            "quote": "'",
                                            "spacing": Array [
                                              null,
                                              null,
                                            ],
                                          },
                                        ],
                                        "op": Array [],
                                        "parens": Array [],
                                        "spacing": Array [],
                                      },
                                    ],
                                    "op": Array [],
                                    "parens": Array [],
                                    "spacing": Array [],
                                  },
                                  "spacing": Array [
                                    " ",
                                  ],
                                },
                                "spacing": " ",
                              },
                              "keyword": null,
                              "parens": Array [],
                              "spacing": null,
                            },
                            "keyword": null,
                            "spacing": Array [
                              Array [
                                "",
                              ],
                            ],
                          },
                        ],
                        "parens": Array [],
                        "spacing": Array [],
                      },
                      "keyword": null,
                      "spacing": Array [
                        Array [
                          "",
                        ],
                      ],
                    },
                  ],
                  "parens": Array [],
                  "spacing": Array [],
                },
                "whenKeyword": "WHEN",
              },
            ],
          ],
          "else": Array [
            "
    ",
            "ELSE",
            " ",
            OrExpression {
              "ex": Array [
                OrPart {
                  "ex": OrExpression {
                    "ex": Array [
                      AndPart {
                        "ex": NotExpression {
                          "ex": ComparisonExpression {
                            "ex": AdditiveExpression {
                              "ex": Array [
                                MultiplicativeExpression {
                                  "ex": Array [
                                    Integer {
                                      "value": "1",
                                    },
                                  ],
                                  "op": Array [],
                                  "parens": Array [],
                                  "spacing": Array [],
                                },
                              ],
                              "op": Array [],
                              "parens": Array [],
                              "spacing": Array [],
                            },
                            "parens": Array [],
                            "rhs": null,
                            "spacing": null,
                          },
                          "keyword": null,
                          "parens": Array [],
                          "spacing": null,
                        },
                        "keyword": null,
                        "spacing": Array [
                          Array [
                            "",
                          ],
                        ],
                      },
                    ],
                    "parens": Array [],
                    "spacing": Array [],
                  },
                  "keyword": null,
                  "spacing": Array [
                    Array [
                      "",
                    ],
                  ],
                },
              ],
              "parens": Array [],
              "spacing": Array [],
            },
          ],
          "end": Array [
            "
    ",
            "END",
          ],
          "expr": null,
          "keyword": "CASE",
          "parens": Array [
            Object {
              "close": Array [
                "
  ",
                ")",
              ],
              "open": Array [
                "(",
                "
    ",
              ],
            },
          ],
        },
        "parens": Array [],
        "spacing": Array [
          " ",
        ],
      },
    ],
    "parens": Array [],
    "spacing": Array [
      " ",
      " ",
      " ",
      " ",
      " ",
      " ",
      "
  ",
      "
  ",
    ],
  },
  "distinct": null,
  "fromClause": FromClause {
    "alias": null,
    "fc": RefExpression {
      "name": "tasks",
      "namespace": "sys",
    },
    "keyword": "FROM",
    "parens": undefined,
    "spacing": Array [
      " ",
      null,
    ],
  },
  "groupByClause": null,
  "havingClause": null,
  "limitClause": null,
  "orderByClause": OrderByClause {
    "byKeyword": "BY",
    "orderBy": Array [
      OrderByPart {
        "direction": "DESC",
        "orderBy": OrExpression {
          "ex": Array [
            OrPart {
              "ex": OrExpression {
                "ex": Array [
                  AndPart {
                    "ex": NotExpression {
                      "ex": ComparisonExpression {
                        "ex": AdditiveExpression {
                          "ex": Array [
                            MultiplicativeExpression {
                              "ex": Array [
                                String {
                                  "chars": "rank",
                                  "quote": "\\"",
                                  "spacing": Array [
                                    null,
                                    null,
                                  ],
                                },
                              ],
                              "op": Array [],
                              "parens": Array [],
                              "spacing": Array [],
                            },
                          ],
                          "op": Array [],
                          "parens": Array [],
                          "spacing": Array [],
                        },
                        "parens": Array [],
                        "rhs": null,
                        "spacing": null,
                      },
                      "keyword": null,
                      "parens": Array [],
                      "spacing": null,
                    },
                    "keyword": null,
                    "spacing": Array [
                      Array [
                        "",
                      ],
                    ],
                  },
                ],
                "parens": Array [],
                "spacing": Array [],
              },
              "keyword": null,
              "spacing": Array [
                Array [
                  "",
                ],
              ],
            },
          ],
          "parens": Array [],
          "spacing": Array [],
        },
        "spacing": Array [
          " ",
        ],
      },
      OrderByPart {
        "direction": "DESC",
        "orderBy": OrExpression {
          "ex": Array [
            OrPart {
              "ex": OrExpression {
                "ex": Array [
                  AndPart {
                    "ex": NotExpression {
                      "ex": ComparisonExpression {
                        "ex": AdditiveExpression {
                          "ex": Array [
                            MultiplicativeExpression {
                              "ex": Array [
                                String {
                                  "chars": "created_time",
                                  "quote": "\\"",
                                  "spacing": Array [
                                    null,
                                    null,
                                  ],
                                },
                              ],
                              "op": Array [],
                              "parens": Array [],
                              "spacing": Array [],
                            },
                          ],
                          "op": Array [],
                          "parens": Array [],
                          "spacing": Array [],
                        },
                        "parens": Array [],
                        "rhs": null,
                        "spacing": null,
                      },
                      "keyword": null,
                      "parens": Array [],
                      "spacing": null,
                    },
                    "keyword": null,
                    "spacing": Array [
                      Array [
                        "",
                      ],
                    ],
                  },
                ],
                "parens": Array [],
                "spacing": Array [],
              },
              "keyword": null,
              "spacing": Array [
                Array [
                  "",
                ],
              ],
            },
          ],
          "parens": Array [],
          "spacing": Array [],
        },
        "spacing": Array [
          " ",
        ],
      },
    ],
    "orderKeyword": "ORDER",
    "spacing": Array [
      " ",
      " ",
      " ",
    ],
  },
  "spacing": Array [
    null,
    "
  ",
    "
",
    null,
    null,
    null,
    "
",
    null,
  ],
  "type": "query",
  "verb": "SELECT",
  "whereClause": null,
}
`;

exports[`Druid Query Tests parsers task query to string 1`] = `
"SELECT
  \\"task_id\\", \\"type\\", \\"datasource\\", \\"created_time\\", \\"location\\", \\"duration\\", \\"error_msg\\",
  CASE WHEN \\"status\\" = 'RUNNING' THEN \\"runner_status\\" ELSE \\"status\\" END AS \\"status\\",
  (
    CASE WHEN \\"status\\" = 'RUNNING' THEN
     (nullCASE \\"runner_status\\" WHEN 'RUNNING' THEN 4 WHEN 'PENDING' THEN 3 ELSE 2 ENDnull)
    ELSE 1
    END
  ) AS \\"rank\\"
FROM sys.tasks
ORDER BY \\"rank\\" DESC, \\"created_time\\" DESC"
`;

exports[`Druid Query Tests parsers the defaul data sources query 1`] = `
SqlQuery {
  "columns": Columns {
    "columns": Array [
      Column {
        "alias": null,
        "ex": RefExpression {
          "name": "datasource",
          "namespace": null,
        },
        "parens": Array [],
        "spacing": null,
      },
      Column {
        "alias": Alias {
          "keyword": "AS",
          "spacing": Array [
            " ",
          ],
          "value": "num_segments",
        },
        "ex": Function {
          "distinct": null,
          "fn": "COUNT",
          "parens": Array [],
          "spacing": Array [
            null,
            "",
            Array [],
            null,
          ],
          "value": Array [
            ExpressionMaybeFiltered {
              "ex": "*",
              "filter": null,
              "parens": Array [],
              "spacing": null,
            },
          ],
        },
        "parens": Array [],
        "spacing": Array [
          " ",
        ],
      },
      Column {
        "alias": Alias {
          "keyword": "AS",
          "spacing": Array [
            " ",
          ],
          "value": "num_available_segments",
        },
        "ex": Function {
          "distinct": null,
          "fn": "SUM",
          "parens": Array [],
          "spacing": Array [
            null,
            "",
            Array [],
            null,
          ],
          "value": Array [
            ExpressionMaybeFiltered {
              "ex": OrExpression {
                "ex": Array [
                  OrPart {
                    "ex": OrExpression {
                      "ex": Array [
                        AndPart {
                          "ex": NotExpression {
                            "ex": ComparisonExpression {
                              "ex": AdditiveExpression {
                                "ex": Array [
                                  MultiplicativeExpression {
                                    "ex": Array [
                                      RefExpression {
                                        "name": "is_available",
                                        "namespace": null,
                                      },
                                    ],
                                    "op": Array [],
                                    "parens": Array [],
                                    "spacing": Array [],
                                  },
                                ],
                                "op": Array [],
                                "parens": Array [],
                                "spacing": Array [],
                              },
                              "parens": Array [],
                              "rhs": null,
                              "spacing": null,
                            },
                            "keyword": null,
                            "parens": Array [],
                            "spacing": null,
                          },
                          "keyword": null,
                          "spacing": Array [
                            Array [
                              "",
                            ],
                          ],
                        },
                      ],
                      "parens": Array [],
                      "spacing": Array [],
                    },
                    "keyword": null,
                    "spacing": Array [
                      Array [
                        "",
                      ],
                    ],
                  },
                ],
                "parens": Array [],
                "spacing": Array [],
              },
              "filter": null,
              "parens": Array [],
              "spacing": null,
            },
          ],
        },
        "parens": Array [],
        "spacing": Array [
          " ",
        ],
      },
      Column {
        "alias": Alias {
          "keyword": "AS",
          "spacing": Array [
            " ",
          ],
          "value": "size",
        },
        "ex": Function {
          "distinct": null,
          "fn": "SUM",
          "parens": Array [],
          "spacing": Array [
            null,
            "",
            Array [],
            null,
          ],
          "value": Array [
            ExpressionMaybeFiltered {
              "ex": OrExpression {
                "ex": Array [
                  OrPart {
                    "ex": OrExpression {
                      "ex": Array [
                        AndPart {
                          "ex": NotExpression {
                            "ex": ComparisonExpression {
                              "ex": AdditiveExpression {
                                "ex": Array [
                                  MultiplicativeExpression {
                                    "ex": Array [
                                      String {
                                        "chars": "size",
                                        "quote": "\\"",
                                        "spacing": Array [
                                          null,
                                          null,
                                        ],
                                      },
                                    ],
                                    "op": Array [],
                                    "parens": Array [],
                                    "spacing": Array [],
                                  },
                                ],
                                "op": Array [],
                                "parens": Array [],
                                "spacing": Array [],
                              },
                              "parens": Array [],
                              "rhs": null,
                              "spacing": null,
                            },
                            "keyword": null,
                            "parens": Array [],
                            "spacing": null,
                          },
                          "keyword": null,
                          "spacing": Array [
                            Array [
                              "",
                            ],
                          ],
                        },
                      ],
                      "parens": Array [],
                      "spacing": Array [],
                    },
                    "keyword": null,
                    "spacing": Array [
                      Array [
                        "",
                      ],
                    ],
                  },
                ],
                "parens": Array [],
                "spacing": Array [],
              },
              "filter": null,
              "parens": Array [],
              "spacing": null,
            },
          ],
        },
        "parens": Array [],
        "spacing": Array [
          " ",
        ],
      },
      Column {
        "alias": Alias {
          "keyword": "AS",
          "spacing": Array [
            " ",
          ],
          "value": "num_rows",
        },
        "ex": Function {
          "distinct": null,
          "fn": "SUM",
          "parens": Array [],
          "spacing": Array [
            null,
            "",
            Array [],
            null,
          ],
          "value": Array [
            ExpressionMaybeFiltered {
              "ex": OrExpression {
                "ex": Array [
                  OrPart {
                    "ex": OrExpression {
                      "ex": Array [
                        AndPart {
                          "ex": NotExpression {
                            "ex": ComparisonExpression {
                              "ex": AdditiveExpression {
                                "ex": Array [
                                  MultiplicativeExpression {
                                    "ex": Array [
                                      String {
                                        "chars": "num_rows",
                                        "quote": "\\"",
                                        "spacing": Array [
                                          null,
                                          null,
                                        ],
                                      },
                                    ],
                                    "op": Array [],
                                    "parens": Array [],
                                    "spacing": Array [],
                                  },
                                ],
                                "op": Array [],
                                "parens": Array [],
                                "spacing": Array [],
                              },
                              "parens": Array [],
                              "rhs": null,
                              "spacing": null,
                            },
                            "keyword": null,
                            "parens": Array [],
                            "spacing": null,
                          },
                          "keyword": null,
                          "spacing": Array [
                            Array [
                              "",
                            ],
                          ],
                        },
                      ],
                      "parens": Array [],
                      "spacing": Array [],
                    },
                    "keyword": null,
                    "spacing": Array [
                      Array [
                        "",
                      ],
                    ],
                  },
                ],
                "parens": Array [],
                "spacing": Array [],
              },
              "filter": null,
              "parens": Array [],
              "spacing": null,
            },
          ],
        },
        "parens": Array [],
        "spacing": Array [
          " ",
        ],
      },
    ],
    "parens": Array [],
    "spacing": Array [
      "
  ",
      "
  ",
      "
  ",
      "
  ",
    ],
  },
  "distinct": null,
  "fromClause": FromClause {
    "alias": null,
    "fc": RefExpression {
      "name": "segments",
      "namespace": "sys",
    },
    "keyword": "FROM",
    "parens": undefined,
    "spacing": Array [
      " ",
      null,
    ],
  },
  "groupByClause": GroupByClause {
    "byKeyword": "BY",
    "groupBy": Array [
      OrExpression {
        "ex": Array [
          OrPart {
            "ex": OrExpression {
              "ex": Array [
                AndPart {
                  "ex": NotExpression {
                    "ex": ComparisonExpression {
                      "ex": AdditiveExpression {
                        "ex": Array [
                          MultiplicativeExpression {
                            "ex": Array [
                              Integer {
                                "value": "1",
                              },
                            ],
                            "op": Array [],
                            "parens": Array [],
                            "spacing": Array [],
                          },
                        ],
                        "op": Array [],
                        "parens": Array [],
                        "spacing": Array [],
                      },
                      "parens": Array [],
                      "rhs": null,
                      "spacing": null,
                    },
                    "keyword": null,
                    "parens": Array [],
                    "spacing": null,
                  },
                  "keyword": null,
                  "spacing": Array [
                    Array [
                      "",
                    ],
                  ],
                },
              ],
              "parens": Array [],
              "spacing": Array [],
            },
            "keyword": null,
            "spacing": Array [
              Array [
                "",
              ],
            ],
          },
        ],
        "parens": Array [],
        "spacing": Array [],
      },
    ],
    "groupKeyword": "GROUP",
    "spacing": Array [
      " ",
      " ",
      Array [],
    ],
  },
  "havingClause": null,
  "limitClause": null,
  "orderByClause": null,
  "spacing": Array [
    null,
    "
  ",
    "
",
    null,
    "
",
    null,
    null,
    null,
  ],
  "type": "query",
  "verb": "SELECT",
  "whereClause": null,
}
`;

exports[`Druid Query Tests parsers the default data sources query to string 1`] = `
"SELECT
  datasource,
  COUNT(*,null) AS num_segments,
  SUM(is_available,null) AS num_available_segments,
  SUM(\\"size\\",null) AS size,
  SUM(\\"num_rows\\",null) AS num_rows
FROM sys.segments
GROUP BY 1"
`;
